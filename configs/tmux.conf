set-option -g default-command "reattach-to-user-namespace -l bash"

# let me scroll in oversized output
set -g mouse on

# improve colors
set -g default-terminal 'screen-256color'

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr dim

# remap prefix to Control + a
# note: to keep VIM's increment feature (default: <C-a>)
# you need to <C-a> a (double tap a)
set -g prefix C-a
unbind C-b
bind-key a send-prefix

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# open new splits with current path
bind "\"" split-window -c '#{pane_current_path}'
bind "\%" split-window -h -c '#{pane_current_path}'

# reload tmux config file
unbind r
bind r source-file ~/.tmux.conf

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# open new window with current directory
bind-key c  new-window -c "#{pane_current_path}"

# open new pane with current directory
bind "\"" split-window -c "#{pane_current_path}"
bind "\%" split-window -h -c "#{pane_current_path}"
